
1. Write out a generic SELECT statement.

SELECT item FROM table WHERE title LIKE 'B%' AND number > 20;

2. Create a fun way to remember the order of operations in a SELECT statement, such as a mnemonic.

I remember the order as a response to a question about selecting something from a strange place: "Select From Where?"

3. Given this dogs table, write queries to select the following pieces of data:

Intake teams typically guess the breed of shelter dogs, so the breed column may have multiple words (for example, "Labrador Collie mix").

Display the name, gender, and age of all dogs that are part Labrador.

  SELECT name, gender, age FROM dogs WHERE breed LIKE '%labrador';

Display the ids of all dogs that are under 1 year old.

  SELECT id FROM dogs WHERE age < 1;

Display the name and age of all dogs that are female and over 35lbs.

  SELECT name, age FROM dogs WHERE gender = 'F' AND weight > 35;

Display all of the information about all dogs that are not Shepherd mixes.

  SELECT * FROM dogs WHERE breed NOT LIKE 'shepherd';

Display the id, age, weight, and breed of all dogs that are either over 60lbs or Great Danes.

  SELECT id, age, weight, breed FROM dogs WHERE weight > 60 OR breed = 'great dane';

Given this cats table, what records are returned from these queries?

SELECT name, adoption_date FROM cats;

'Mushi' '2016-01-09'
'Seashell' '2016-01-09'
'Azul' '2016-01-11'
'Victoire' '2016-01-11'
'Nala' '2016-01-12'

SELECT name, age FROM cats;

'Mushi'
'Seashell'
'Azul'
'Victoire'
'Nala'

From the cats table, write queries to select the following pieces of data.

Display all the information about all of the available cats.

SELECT * FROM cats;

Choose one cat of each age to show to potential adopters.

SELECT * FROM cats WHERE name = 'Mushi' OR name = 'Seashell' OR name = 'Azul';

Find all of the names of the cats, so you don’t choose duplicate names for new
cats.

SELECT name FROM cats;

6. List each comparison operator and explain when you would use it. Include a real world example for each.

< : when looking for a value that is less than a certain amount.
ex: selecting a book published before 1970:
SELECT title FROM books WHERE year < 1970;

> : when looking for a value that is greater than a certain amount.
ex: selecting a person that weighs over 180 lbs:
SELECT * FROM people WHERE weight > 180;

<= : when looking for a value that is less than or equal to a certain amount.
ex: selecting an item with a price of 10.99 or less
SELECT name FROM items WHERE price <= 10.99;

>= : when looking for a value that is greater than or equal to a certain amount.
ex: selecting a dresser that is at least 40 inches tall:
SELECT name FROM furniture WHERE height >= 40;

!= : when looking for a value that is not equal to a certain value.
ex: selecting a dog that is not male:
SELECT name FROM dogs WHERE gender != 'M';

= : when looking for a value that is equal to a certain value.
ex: selecting an item by its id number:
SELECT name from table WHERE id = 0045323;


7. From the cats table, what data is returned from these queries?

SELECT name FROM cats WHERE gender = ‘F’;

'Seashell'
'Nala'

SELECT name FROM cats WHERE age <> 3;

'Mushi'
'Seashell'
'Victoire'
'Nala'

SELECT ID FROM cats WHERE name != ‘Mushi’ AND gender = ‘M’;

3
4
